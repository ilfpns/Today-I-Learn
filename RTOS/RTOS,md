# RTOS

---

Real-Time Operating System

⇒ 실시간 응용 프로그램을 지원하기 위해 설계된 운영 체제 이다

⇒ 실시간 감시 중, 어떤 이벤트 발생시 정해진 시간 내에 그에 해당하는 응답이 이뤄져야한다

⇒ 주어진 시간 내에 우선 순위대로 어떠한 작업을 반드시 처리해야 하는 시스템

- 논리적으로 올바른 계산이어도 시간을 초과하면 의미가 없다
    - RTOS를 사용한 기기는 최대 1초 안에 데이터를 처리한다
    - 그렇기에 특별한 설계와 스케쥴링 알고리즘을 사용한다

---

### RTOS 특징

1. Scheduling
    - RTOS는 작업들 간의 우선순위를 관리하고, CPU 시간을 효율적으로 분배한다
    - 중요 작업은 높은 우선순위로 먼저 처리된다 → 어떤 task를 처리할지 결정 할 수 있다
        
        (Task : 시스템에서 독립적으로 실행되는 작업 단위)
        
2. Interrupt 
    - H/W Interrupt와 S/W Interrupt를 관리하여 작업 간의 전환을 가능케 한다
    - 중요한 인터럽트나 이벤트에 대한 신속한 응답을 보장하고 짧은 Interrupt Latency를 가진다
        
        (Interrupt Latency : 실제 인터럽트가 발생 후 인터럽트 핸들러까지 도착하는 시간)
        
3. Sync & Protocol
    - 공유 자원에 대한 접근을 동기화하고, 작업 간의 효율적 통신을 위한 매커니즘 제공
    - 세마포어, 뮤텍스, 메시지 큐 등의 동기화 및 통신 매커니즘을 사용함
    
4. Device & timer
    - 정확한 타이밍을 위해 타이머 및 디바이스 관리 기능 제공
    - 하드웨러 리소르 효율적 사용 가능

1. Process
    - 작업자들의 CRUD 및 재개를 관리하고 이는 시스템 동작을 유연하게 한다
    
2. Kurnel SIze 
    - 커널 사이즈가 작다
